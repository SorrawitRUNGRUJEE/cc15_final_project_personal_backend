// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement()) @map("uid")
  email        String     @unique
  region       Region?
  username     String     @unique @db.VarChar(30)
  password     String
  profileImage String?    @map("profile_image")
  coverImage   String?    @map("cover_image")
  createdAt    DateTime   @default(now()) @map("created_at")
  isAdmin      Boolean    @default(false) @map("is_admin")
  isSuperAdmin Boolean    @default(false) @map("is_super_admin")
  basket       Basket[]
  order        Order[]
  wishlist     wishlist[]
}

model Product {
  id              Int               @id @default(autoincrement())
  title           String
  fullDesc        String            @map("full_desc")
  briefDesc       String            @map("brief_desc")
  price           Int
  mainPicture     String?           @map("main_picture")
  secondPicture   String?           @map("seconday_picture")
  productCategory ProductCategory[]
  basket          Basket[]
  orderItem       orderItem[]
  wishlist        wishlist[]
  picture         picture[]
  featureProduct  featureProduct[]
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String
  productCategory ProductCategory[]
}

model ProductCategory {
  id         Int      @id @default(autoincrement())
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int

  @@map("product_category")
}

model Basket {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  userId    Int
  productId Int
}

enum Region {
  AO
  EU
  Africa
  NA
  SA
}

model orderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  orderId   Int
  productId Int

  @@map("order_item")
}

model Order {
  id            Int         @id @default(autoincrement())
  totalPrice    Int         @map("total_price")
  paymentStatus Boolean     @map("payment_status")
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  paymentSlip   String      @map("payment_slip")
  orderItem     orderItem[]
}

model wishlist {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  productId Int
  userId    Int
}

model picture {
  id        Int     @id @default(autoincrement())
  picture   String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model featureProduct {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}
